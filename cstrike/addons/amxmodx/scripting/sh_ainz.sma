// Ainz Ooal Gown!
// I decided to make Grandmaster an active power that consumes money
// -- ibiruai.github.io

// GRANDMASTER! from marvel comics. One of the Elders of the Universe, has the power to to resurrect dead beings.
// Created 5/18/2003
// Hero Originally named Zeus, changed since powers did not fit.

/* CVARS - copy and paste to shconfig.cfg

//Ainz Ooal Gown
ainz_level 7
ainz_cost 1500

*/

#include <superheromod>
#include <fakemeta_util>

#define REVIVAL_DISTANCE 70.0

// GLOBAL VARIABLES
new gHeroID
new const gHeroName[] = "Ainz Ooal Gown"
new bool:gHasAinz[SH_MAXSLOTS+1]
new const gSound[] = "ambience/port_suckin1.wav"
new gPcvarCost
new g_wasducking[SH_MAXSLOTS+1]
//----------------------------------------------------------------------------------------------
public plugin_init()
{
	// Plugin Info
	register_plugin("SUPERHERO Ainz Ooal Gown", SH_VERSION_STR, "{HOJ} Batman/JTP10181")

	// DO NOT EDIT THIS FILE TO CHANGE CVARS, USE THE SHCONFIG.CFG
	new pcvarLevel = register_cvar("ainz_level", "7")
	gPcvarCost = register_cvar("ainz_cost", "1500")

	// FIRE THE EVENTS TO CREATE THIS SUPERHERO!
	gHeroID = sh_create_hero(gHeroName, pcvarLevel)
	sh_set_hero_info(gHeroID, "Resurrection Wand", "Use Cash Item to revive players")
	sh_set_hero_bind(gHeroID)
}
//----------------------------------------------------------------------------------------------
public plugin_precache()
{
	precache_sound(gSound)
}
//----------------------------------------------------------------------------------------------
public sh_hero_init(id, heroID, mode)
{
	if ( gHeroID != heroID ) return

	gHasAinz[id] = mode ? true : false

	sh_debug_message(id, 1, "%s %s", gHeroName, mode ? "ADDED" : "DROPPED")
}
//----------------------------------------------------------------------------------------------
public sh_hero_key(id, heroID, key)
{
	if ( gHeroID != heroID || !is_user_alive(id) ) return

	if (key == SH_KEYUP)
	{
		// Let them know they don't have enough money
		if ( cs_get_user_money(id) < get_pcvar_num(gPcvarCost) ) {
			sh_sound_deny(id)
			sh_chat_message(id, gHeroID, "%L", id, "AINZ_NO_MONEY", get_pcvar_num(gPcvarCost))
			return
		}
		// https://github.com/hitmany/cs-1.6-diablo-2/blob/master/diablo2.sma
		// Find a player to revive
		static Float:origin[3]
		pev(id, pev_origin, origin)

		new ent
		static classname[32]
		while((ent = fm_find_ent_in_sphere(ent, origin, REVIVAL_DISTANCE)) != 0)
		{
			pev(ent, pev_classname, classname, 31)
			if(equali(classname, "fake_corpse") && fm_is_ent_visible(id, ent))
			{
				ainz_revive(id, pev(ent, pev_owner))
				return
			}
		}
		// No target found
		sh_chat_message(id, gHeroID, "%L", id, "AINZ_NO_DEAD_PLAYER")
		sh_sound_deny(id)
	}
}
//----------------------------------------------------------------------------------------------
public ainz_revive(player, target)
{
	if ( !sh_is_active() || !sh_is_inround() ) return
	if ( !is_user_connected(target) || is_user_alive(target) )
	{
		sh_sound_deny(player)
		return
	}

	new parm[2]
	parm[0] = target
	parm[1] = player
	cs_set_user_money(player, cs_get_user_money(player) - get_pcvar_num(gPcvarCost))
	set_task(1.0, "ainz_respawn", _, parm, 2)
}
//----------------------------------------------------------------------------------------------
public ainz_respawn(parm[])
{
	if ( !sh_is_active() || !sh_is_inround() ) return

	new target = parm[0]
	new player = parm[1]

	if ( !is_user_connected(target) || is_user_alive(target) ) return
	
	new ent
	while((ent = fm_find_ent_by_owner(ent, "fake_corpse", target)) != 0)
		fm_remove_entity(ent)

	emit_sound(player, CHAN_STATIC, gSound, VOL_NORM, ATTN_NORM, 0, PITCH_NORM)

	new playerName[32], targetName[32]
	get_user_name(player, playerName, charsmax(playerName))
	get_user_name(target, targetName, charsmax(targetName))
	

	for ( new i = 1; i <= SH_MAXSLOTS; i++ )
		if ( is_user_connected(i) )
			sh_chat_message(i, gHeroID, "%L", i, "AINZ_POWER_USED", playerName, targetName)

	//Respawns the player best available method
	ExecuteHamB(Ham_CS_RoundRespawn, target)

	emit_sound(target, CHAN_STATIC, gSound, VOL_NORM, ATTN_NORM, 0, PITCH_NORM)

	sh_set_rendering(target, 255, 255, 0, 16, kRenderFxGlowShell)

	set_task(3.0, "ainz_unglow", target)
}
//----------------------------------------------------------------------------------------------
public ainz_unglow(id)
{
	sh_set_rendering(id)
}
//----------------------------------------------------------------------------------------------
// https://github.com/hitmany/cs-1.6-diablo-2/blob/master/diablo2.sma
public sh_round_new()
{
	fm_remove_entity_name("fake_corpse")
}

public sh_client_death(vid) {
	static Float:minsize[3]
	pev(vid, pev_mins, minsize)
	if(minsize[2] == -18.0)
		g_wasducking[vid] = true
	else
		g_wasducking[vid] = false
	set_task(0.5, "task_check_dead_flag", vid)
}

public task_check_dead_flag(id)
{
	if(!is_user_connected(id))
		return

	if(pev(id, pev_deadflag) == DEAD_DEAD)
		create_fake_corpse(id)
	else
		set_task(0.5, "task_check_dead_flag", id)
}

public create_fake_corpse(id)
{
	set_pev(id, pev_effects, EF_NODRAW)

	static model[32]
	cs_get_user_model(id, model, 31)
	
	static player_model[64]
	format(player_model, 63, "models/player/%s/%s.mdl", model, model)
		
	static Float: player_origin[3]
	pev(id, pev_origin, player_origin)
	
	static Float:mins[3]
	mins[0] = -16.0
	mins[1] = -16.0
	mins[2] = -34.0

	static Float:maxs[3]
	maxs[0] = 16.0
	maxs[1] = 16.0
	maxs[2] = 34.0

	if(g_wasducking[id])
	{
		mins[2] /= 2
		maxs[2] /= 2
	}
	
	static Float:player_angles[3]
	pev(id, pev_angles, player_angles)
	player_angles[2] = 0.0
			
	new sequence = pev(id, pev_sequence)

	new ent = fm_create_entity("info_target")
	if(ent)
	{
		set_pev(ent, pev_classname, "fake_corpse")
		engfunc(EngFunc_SetModel, ent, player_model)
		engfunc(EngFunc_SetOrigin, ent, player_origin)
		engfunc(EngFunc_SetSize, ent, mins, maxs)
		set_pev(ent, pev_solid, SOLID_TRIGGER)
		set_pev(ent, pev_movetype, MOVETYPE_TOSS)
		set_pev(ent, pev_owner, id)
		set_pev(ent, pev_angles, player_angles)
		set_pev(ent, pev_sequence, sequence)
		set_pev(ent, pev_frame, 9999.9)
	}
}

public client_disconnected(id)
{
	new ent
	while((ent = fm_find_ent_by_owner(ent, "fake_corpse", id)) != 0)
		fm_remove_entity(ent)
}
